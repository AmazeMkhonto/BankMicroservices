// <auto-generated />
using System;
using Bank.Service.AccountHolder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank.Service.AccountHolder.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bank.Service.AccountHolder.Models.AccountHolders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountHolders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "john.doe@example.com",
                            FirstName = "John",
                            IdNumber = "8001010000000",
                            LastName = "Doe",
                            MobileNumber = "0123456789",
                            ResidentialAddress = "123 Main Street, Cape Town"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1995, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "jane.smith@example.com",
                            FirstName = "Jane",
                            IdNumber = "7503150000000",
                            LastName = "Smith",
                            MobileNumber = "987654321",
                            ResidentialAddress = "456 Pine Avenue, Johannesburg"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1960, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "michael.jones@example.com",
                            FirstName = "Michael",
                            IdNumber = "6007010000000",
                            LastName = "Jones",
                            MobileNumber = "0009876543",
                            ResidentialAddress = "789 Oak Lane, Durban"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
